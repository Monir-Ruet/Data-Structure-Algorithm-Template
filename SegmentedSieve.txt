const int N=100000;
vector<ll>primes;
int pf[N]={0};
void Seive(){
  for(int i=2;i<N;i++){
    if(pf[i]==0) pf[i]=i,primes.push_back(i);
    for(int j=0;j<primes.size() && primes[j]<=pf[i] && i*primes[j]<N;j++)
      pf[i*primes[j]]=primes[j];
  }
}

// Returns primes between l ,r
vector<ll> SegmentSeive(ll l,ll r){
  l=max(2LL,l);
  vector<ll>v;
  bool f[r-l+1];
  memset(f,true,sizeof(f));
  for(auto i:primes){
    ll j=i*i;
    if(l>j) j=(l+i-1)/i * i;
    for(;j<=r;j+=i)
      f[j-l]=false;
  }
  for(int i=l;i<=r;i++)
    if(f[i-l]) v.push_back(i);
  return v;
}
