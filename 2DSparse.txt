const ll N=1005;
ll table[15][N][15][N];
ll get(ll x1,ll y1,ll x2,ll y2){
  ll lenx=x2-x1+1,kx=log2(lenx);
  ll leny=y2-y1+1,ky=log2(leny);
  ll m1=min(table[kx][x1][ky][y1],table[kx][x1][ky][y2-(1<<ky)+1]);
  ll m2=min(table[kx][x2-(1<<kx)+1][ky][y1],table[kx][x2-(1<<kx)+1][ky][y2-(1<<ky)+1]);
  return min(m1,m2);
}
void NDSPTABLE(vector<vector<ll>>a){
  int n=a.size(),m=a[0].size();
  int k1=log2(n)+1,k2=log2(m)+1;
  for(int i=0;i<n;i++){
    for(int j=0;j<m;j++)
      table[0][i][0][j]=a[i][j];
    for(int jx=1;jx<=k2;jx++)
      for(int j=0;j+(1<<jx)<=m;j++)
        table[0][i][jx][j]=min(table[0][i][jx-1][j],table[0][i][jx-1][j+(1<<(jx-1))]);
  }
  for(int ix=1;ix<=k1;ix++)
    for(int i=0;i+(1<<ix)<=n;i++)
      for(int jx=1;jx<=k2;jx++)
        for(int j=0;j+(1<<jx)<=m;j++)
          table[ix][i][jx][j]=min(table[ix-1][i][jx][j],table[ix-1][i+(1<<(ix-1))][jx][j]);
}
