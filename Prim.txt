vector<array<ll,3>>PRIM_MST(vector<vector<array<ll,2>>>adj){
  bool visited[adj.size()];
  memset(visited,false,sizeof(visited));
  vector<array<ll,3>>edge;
  priority_queue<array<ll,3>,vector<array<ll,3>>,greater<array<ll,3>>>q;
  q.push({0,1,-1});
  while(!q.empty()){
    array<ll,3> u=q.top();
    q.pop();
    if(visited[u[1]]) continue;
    edge.push_back({u[2],u[1],u[0]});
    // cout<<u[2]<<" "<<u[1]<<" "<<u[0]<<nl;
    for(auto i:adj[u[1]]){
      if(!visited[i[0]]){
        q.push({i[1],i[0],u[1]});
      }
    }
    visited[u[1]]=1;
  }
  edge.erase(edge.begin());
  return edge;
}
